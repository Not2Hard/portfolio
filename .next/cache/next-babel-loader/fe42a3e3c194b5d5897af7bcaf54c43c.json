{"ast":null,"code":"var _jsxFileName = \"/Users/natalia/Development/portfolio/pages/tfeditor.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Head from 'next/head';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from '../components/Header';\nimport GallerySmall from '../components/Gallery/GallerySmall';\nimport Notification from '../components/Notification';\nimport brand from '../public/text/brand';\nimport { withTranslation } from '../i18n';\nimport TFeditor from '../components/Projectsux/tfeditor.js';\nimport edheader from '../public/images/profile/editor_header.jpg';\nimport tfmock from '../public/images/profile/tf-images/tapandfork.jpg';\nimport ed_login from '../public/images/profile/editor_tf.jpg';\nimport ed1 from '../public/images/profile/editor1.jpg';\nimport ed2 from '../public/images/profile/editor2.jpg';\nimport Container from '@material-ui/core/Container';\n\nconst sectionMargin = margin => margin * 10;\n\nconst useStyles = makeStyles(theme => ({\n  mainWrap: {\n    position: 'relative',\n    width: '100%',\n    overflow: 'hidden',\n    background: theme.palette.type === 'dark' ? theme.palette.background.default : theme.palette.background.paper\n  },\n  spaceBottom: {\n    marginBottom: sectionMargin(theme.spacing())\n  },\n  spaceTop: {\n    paddingTop: sectionMargin(theme.spacing())\n  },\n  blueWrap: {\n    backgroundImage: `linear-gradient(120deg, ${theme.palette.type === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.main}, ${theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main})`,\n    padding: theme.spacing(10, 0)\n  },\n  containerWrap: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(4),\n    '& > section': {\n      position: 'relative'\n    }\n  }\n}));\n\nfunction TFwebeditor(props) {\n  const classes = useStyles();\n  const {\n    onToggleDark,\n    onToggleDir,\n    t\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, brand.profile.name, \"\\xA0 - Graphic editor for Tap & Fork\")), /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onToggleDark: onToggleDark,\n    onToggleDir: onToggleDir,\n    invert: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headderImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: edheader,\n    align: \"center\",\n    width: \"100%\",\n    alt: \"App on mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 46\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.containerWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: clsx(classes.spaceTop, classes.spaceBottom),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Graphic editor for Tap & Fork\")), /*#__PURE__*/React.createElement(TFeditor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.blueWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ed_login,\n    alt: \"tap and fork\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 71\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: ed1,\n    alt: \"tap and fork\",\n    align: \"center\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 78\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 83\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: ed2,\n    alt: \"tap and fork\",\n    align: \"center\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 84\n    }\n  })))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.blueWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/tflooks.pdf\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tfmock,\n    alt: \"tap and fork\",\n    align: \"center\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 54\n    }\n  }))))), /*#__PURE__*/React.createElement(GallerySmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })));\n}\n\nTFwebeditor.propTypes = {\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired\n};\n\nTFwebeditor.getInitialProps = async () => ({\n  namespacesRequired: ['common']\n});\n\nexport default withTranslation('common')(TFwebeditor);","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/pages/tfeditor.js"],"names":["React","PropTypes","clsx","makeStyles","Typography","Head","CssBaseline","Header","GallerySmall","Notification","brand","withTranslation","TFeditor","edheader","tfmock","ed_login","ed1","ed2","Container","sectionMargin","margin","useStyles","theme","mainWrap","position","width","overflow","background","palette","type","default","paper","spaceBottom","marginBottom","spacing","spaceTop","paddingTop","blueWrap","backgroundImage","secondary","dark","main","primary","padding","containerWrap","marginTop","TFwebeditor","props","classes","onToggleDark","onToggleDir","t","profile","name","headderImg","propTypes","func","isRequired","getInitialProps","namespacesRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Head from 'next/head';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from '../components/Header';\nimport GallerySmall from '../components/Gallery/GallerySmall'\nimport Notification from '../components/Notification';\nimport brand from '../public/text/brand';\nimport { withTranslation } from '../i18n';\nimport TFeditor from '../components/Projectsux/tfeditor.js';\nimport edheader from '../public/images/profile/editor_header.jpg';\nimport tfmock from '../public/images/profile/tf-images/tapandfork.jpg';\n\nimport ed_login from '../public/images/profile/editor_tf.jpg';\nimport ed1 from '../public/images/profile/editor1.jpg';\nimport ed2 from '../public/images/profile/editor2.jpg';\n\nimport Container from '@material-ui/core/Container';\n\nconst sectionMargin = margin => (margin * 10);\nconst useStyles = makeStyles(theme => ({\n  mainWrap: {\n    position: 'relative',\n    width: '100%',\n    overflow: 'hidden',\n    background: theme.palette.type === 'dark' ? theme.palette.background.default : theme.palette.background.paper,\n  },\n  spaceBottom: {\n    marginBottom: sectionMargin(theme.spacing())\n  },\n  spaceTop: {\n    paddingTop: sectionMargin(theme.spacing())\n  },\n  blueWrap: {\n    backgroundImage: `linear-gradient(120deg, ${theme.palette.type === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.main}, ${theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main})`,\n    padding: theme.spacing(10, 0)\n    },\n  containerWrap: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(4),\n    '& > section': {\n      position: 'relative'\n    }\n  },\n}));\n\nfunction TFwebeditor(props) {\n  const classes = useStyles();\n  const { onToggleDark, onToggleDir, t } = props;\n  return (\n    <React.Fragment>\n      <Head>\n        <title>\n          { brand.profile.name }\n          &nbsp; - Graphic editor for Tap & Fork \n        </title>\n      </Head>\n      <CssBaseline />\n      <div className={classes.mainWrap}>\n        <Header\n          onToggleDark={onToggleDark}\n          onToggleDir={onToggleDir}\n          invert\n        />\n        <div className={classes.headderImg} ><img src={edheader} align=\"center\" width=\"100%\"  alt=\"App on mobile\" /> </div>\n        <main className={classes.containerWrap}>\n          <section className={clsx(classes.spaceTop, classes.spaceBottom)}>\n            <Typography variant=\"h2\" align=\"center\" gutterBottom>\n            Graphic editor for Tap & Fork \n            </Typography>\n            \n          </section>\n          <TFeditor/> \n          </main>\n          <section>\n            <div className={classes.blueWrap}>\n              <Container>\n              <img src={ed_login} alt=\"tap and fork\" align=\"center\" /><br/><br/>\n              <img src={ed1} alt=\"tap and fork\" align=\"center\" width=\"100%\"/><br/><br/>\n              <img src={ed2} alt=\"tap and fork\" align=\"center\" width=\"100%\" /><br/><br/>\n              </Container>\n              </div>  \n          </section>\n          <section>\n            <div className={classes.blueWrap}>\n              <Container maxWidth=\"lg\">\n              <a href=\"/tflooks.pdf\" target=\"_blank\"><img src={tfmock} alt=\"tap and fork\" align=\"center\" width=\"100%\"/></a>\n              </Container>\n              </div>  \n          </section>\n\n          <GallerySmall/>\n       \n        {/* <Notification /> */}\n      </div>\n    </React.Fragment>\n  );\n}\n\nTFwebeditor.propTypes = {\n  onToggleDark: PropTypes.func.isRequired,\n  onToggleDir: PropTypes.func.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nTFwebeditor.getInitialProps = async () => ({\n  namespacesRequired: ['common'],\n});\n\nexport default withTranslation('common')(TFwebeditor);\n"]},"metadata":{},"sourceType":"module"}