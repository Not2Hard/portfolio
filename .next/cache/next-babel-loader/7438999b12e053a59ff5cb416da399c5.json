{"ast":null,"code":"var _jsxFileName = \"/Users/natalia/Development/portfolio/components/T&F/Tf.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from \"../../i18n\";\nimport logo from \"../../public/images/profile-logo.svg\";\nimport brand from \"../../public/text/brand\";\nimport { useText } from \"../../theme/common\";\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\n\nconst TapFork = () => {\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    component: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    direction: isMobile ? 'column' : 'row',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Problem:\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns.\"), __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Solution:\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Tap & Fork is an application that allows people to find restaurants. Conceptually it is similar to applications like Yelp, OpenTable or Zomato, Tap & Fork is built to address some of the shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns. With Tap & Fork, restaurant owners can easily upload images, create coupons, and run promotions.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), __jsx(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), __jsx(Typography, {\n    variant: \"h4\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"My role in this project\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, \"UX designe for online ad maker\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"Graphic support for the project\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), __jsx(Typography, {\n    variant: \"h5\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"UX designe for online ad maker\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"Graphic support for the project\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(ContactForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })))));\n};\n\nTapFork.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(TapFork);","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/components/T&F/Tf.js"],"names":["React","PropTypes","Container","useMediaQuery","useTheme","Grid","Typography","Divider","withTranslation","logo","brand","useText","useStyles","ContactForm","TapFork","classes","text","theme","isMobile","breakpoints","down","root","paragraph","divider","propTypes","t","func","isRequired"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from '~/i18n';\nimport logo from '~/public/images/profile-logo.svg';\nimport brand from '~/public/text/brand';\nimport { useText } from '~/theme/common';\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\n\nconst TapFork = () => {\n  const classes = useStyles();\n  const text = useText();\n  \n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n      <div className={classes.root}>\n      <Container maxWidth=\"lg\" component=\"footer\">\n        <Grid container spacing={6} direction={isMobile ? 'column' : 'row'}>\n          <Grid item xs={12} md={5}>\n            <div>\n              <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                Problem:\n              </Typography>\n              <Typography className={text.paragraph}>\n              Shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns.\n              </Typography>\n              <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n              Solution:\n              </Typography>\n              <Typography className={text.paragraph}>\n\n              Tap & Fork is an application that allows people to find restaurants. Conceptually it is similar to applications like Yelp, OpenTable or Zomato, Tap & Fork is built to address some of the shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns. With Tap & Fork, restaurant owners can easily upload images, create coupons, and run promotions.\n                <br />\n              </Typography>\n\n              <Divider className={classes.divider} />\n\n              <Typography variant=\"h4\" align=\"left\">\n                My role in this project\n              </Typography>\n              <Typography className={text.paragraph}>\n                <ul>\n                  <li>UX and Graphic design of the application</li>\n                  <li>UX designe for online ad maker</li>\n                  <li>Graphic support for the project</li>\n                </ul>\n                <br />\n              </Typography>\n              <Typography variant=\"h5\" align=\"left\">\n                UX and Graphic design of the application\n              </Typography>\n              <Typography className={text.paragraph}>\n                <ul>\n                  <li>UX and Graphic design of the application</li>\n                  <li>UX designe for online ad maker</li>\n                  <li>Graphic support for the project</li>\n                </ul>\n                <br />\n              </Typography>\n\n              \n            </div>\n          </Grid>\n          <Grid item xs={12} md={7}>\n            \n            <ContactForm />\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n    );\n  }\n\n  TapFork.propTypes = {\n    t: PropTypes.func.isRequired\n  };\n  \n  export default withTranslation(['profile-landing'])(TapFork);"]},"metadata":{},"sourceType":"module"}