{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/natalia/Development/portfolio/components/T&F/tfeditor.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from \"../../i18n\";\nimport logo from '../../public/images/profile-logo.svg';\nimport brand from \"../../public/text/brand\";\nimport { useText } from \"../../theme/common\";\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\nimport tfad from '../../public/images/profile/tf-images/adeditor.jpg';\nimport adbuilder from '../../public/images/profile/tf-images/adbuilder.jpg';\nimport users from '../../public/images/profile/tf-images/users.jpg';\nimport tfmock from '../../public/images/profile/tf-images/tapandfork.jpg';\n\nvar TFeditor = function TFeditor() {\n  _s();\n\n  var _useState = useState(1),\n      pageNumber = _useState[0],\n      setPageNumber = _useState[1];\n\n  var classes = useStyles();\n  var text = useText();\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    component: \"footer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    direction: isMobile ? 'column' : 'row',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Problem:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"It is complicated prosses to make custom graphic ad and promotion cupons for a busy buisness manager. There is a need for symple way take a picture add words and publish solution.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Solution:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, \"Tap & Fork offers a symple ad editor for restaurant owners as a part of website application.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"The idea was:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"Allow restaurant owners to control all of the information about their business directly on the application.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, \"Allow restaurants to publish coupons, specials, and events  as well as promote new things on the menu without any design services.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Publish new photos and manage the published ones.\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/tfsi.pdf\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"See goals and flowcharts in pdf file.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: tfad,\n    alt: \"tap and fork\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"My role in this project\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"User centured design\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"I was analizing different mobile and web aplications for graphic editing. We aime for solution that can be used without training for a customer who is not familiar with graphic creation process.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: users,\n    alt: \"tap and fork\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"The idea was:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Allow restaurant owners to control all of the information about their business directly on the application.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Allow restaurants to publish coupons, specials, and events  as well as promote new things on the menu without any design services.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Publish new photos and manage the published ones.\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/tfsi.pdf\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"See goals and flowcharts in pdf file.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Tap&Fork mobile app mockup:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/tflooks.pdf\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Click here for pdf\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: adbuilder,\n    alt: \"tap and fork\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), \"I'm particularly proud of some contrebutions I made to this project:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Google data is used before restaurants customize their business account \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Beautifull images\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"The ability to have 4 restaurants on one mobile screen. Image size is very important for pleasant scroll and prevents users from feeling bombarded with information.\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 24\n    }\n  }))))));\n};\n\n_s(TFeditor, \"o7gPsEyG7PYe2r5whaPOAjCklzQ=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = TFeditor;\nTFeditor.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(TFeditor);\n\nvar _c;\n\n$RefreshReg$(_c, \"TFeditor\");","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/components/T&F/tfeditor.js"],"names":["React","useState","PropTypes","Container","useMediaQuery","useTheme","Grid","Typography","Divider","withTranslation","logo","brand","useText","useStyles","ContactForm","tfad","adbuilder","users","tfmock","TFeditor","pageNumber","setPageNumber","classes","text","theme","isMobile","breakpoints","down","root","paragraph","propTypes","t","func","isRequired"],"mappings":"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","sourcesContent":["\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from '~/i18n';\nimport logo from '../../public/images/profile-logo.svg';\nimport brand from '~/public/text/brand';\nimport { useText } from '~/theme/common';\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\nimport tfad from '../../public/images/profile/tf-images/adeditor.jpg';\nimport adbuilder from '../../public/images/profile/tf-images/adbuilder.jpg';\nimport users from '../../public/images/profile/tf-images/users.jpg';\nimport tfmock from '../../public/images/profile/tf-images/tapandfork.jpg';\n\n\nconst TFeditor = () => {\n  const [pageNumber, setPageNumber] = useState(1);\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n\n    return (\n      <div className={classes.root}>\n        <Container maxWidth=\"lg\" component=\"footer\">\n          <Grid container spacing={6} direction={isMobile ? 'column' : 'row'}>\n            <Grid item xs={12} md={5}>\n                <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                  Problem:\n                </Typography>\n                <Typography className={text.paragraph}>\n                  It is complicated prosses to make custom graphic ad and promotion cupons for a busy buisness manager. There is a need for symple way take a picture add words and publish solution.\n                </Typography>\n                \n            </Grid>\n            <Grid item xs={12} md={7}>\n              <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                  Solution:\n                  </Typography>\n                  <Typography className={text.paragraph}>\n                    Tap & Fork offers a symple ad editor for restaurant owners as a part of website application.\n                    </Typography>\n                    <Typography className={text.paragraph}>\n                        The idea was:\n                        <ul>\n                            <li>Allow restaurant owners to control all of the information about their business directly on the application.</li>\n                            <li>Allow restaurants to publish coupons, specials, and events  as well as promote new things on the menu without any design services.</li>\n                            <li>Publish new photos and manage the published ones.</li>\n                        </ul>\n                        <a href=\"/tfsi.pdf\" target=\"_blank\">See goals and flowcharts in pdf file.</a>\n\n                        <br />\n                        \n                    </Typography>\n                  <Typography className={text.paragraph}>\n                   \n                    <br />\n                    <img src={tfad} alt=\"tap and fork\" />\n                </Typography>\n          \n            </Grid>\n           \n            <Grid item xs={12} md={5}>\n            <Typography variant=\"h4\" align=\"left\">\n                  My role in this project\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={7}>\n            \n                <Typography variant=\"h5\" align=\"left\">\n                  User centured design\n                </Typography>\n                <br/>\n                <Typography className={text.paragraph}>\n                  I was analizing different mobile and web aplications for graphic editing. We aime for solution that can be used without training for a customer who is not familiar with graphic creation process. \n                </Typography>\n                <br/> <br/>\n                <img src={users} alt=\"tap and fork\" />\n                <br/> <br/>\n                <Typography className={text.paragraph}>\n                  The idea was:\n                  <ul>\n                    <li>Allow restaurant owners to control all of the information about their business directly on the application.</li>\n                    <li>Allow restaurants to publish coupons, specials, and events  as well as promote new things on the menu without any design services.</li>\n                    <li>Publish new photos and manage the published ones.</li>\n                  </ul>\n                  <a href=\"/tfsi.pdf\" target=\"_blank\">See goals and flowcharts in pdf file.</a>\n\n                  <br />\n                \n                </Typography>\n                <br/> <br/>\n                <Typography variant=\"h5\" align=\"left\">\n                  Tap&Fork mobile app mockup: \n                </Typography>\n                <br/><br/>\n                <a href=\"/tflooks.pdf\" target=\"_blank\">Click here for pdf</a>\n                <br/><br/><img src={adbuilder} alt=\"tap and fork\" align=\"center\"/>\n                <br/><br/><br/>\n                <Typography className={text.paragraph}>\n                </Typography>\n                <Typography variant=\"h6\" align=\"left\">\n                <br/>\n                I'm particularly proud of some contrebutions I made to this project:\n                </Typography>\n                <Typography className={text.paragraph}>\n                <ul>\n                    <li>Google data is used before restaurants customize their business account </li>\n                    <li>Beautifull images</li>\n                    <li>The ability to have 4 restaurants on one mobile screen. Image size is very important for pleasant scroll and prevents users from feeling bombarded with information.</li>\n                  </ul>\n                  <br/><br/>\n                  </Typography>\n\n                  \n                </Grid>\n              </Grid>   \n             \n          \n        </Container>      \n    </div>\n    );\n  }\n\n  TFeditor.propTypes = {\n    t: PropTypes.func.isRequired\n  };\n  \n  export default withTranslation(['profile-landing'])(TFeditor);"]},"metadata":{},"sourceType":"module"}