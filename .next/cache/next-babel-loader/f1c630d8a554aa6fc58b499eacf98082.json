{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport useStyles from './contact-style';\n\nfunction Form(props) {\n  var classes = useStyles();\n  var text = useText();\n  var t = props.t;\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState(false),\n      openNotif = _useState2[0],\n      setNotif = _useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setNotif(true);\n  };\n\n  var handleClose = function handleClose() {\n    setNotif(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formWrap\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    key: \"top right\",\n    open: openNotif,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\"\n    }, \"Message Sent\")\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.formBox\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 5,\n    xs: 12\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: clsx(classes.title, text.title),\n    variant: \"h3\"\n  }, t('common:profile-landing.contact_title'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 7,\n    xs: 12\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: function onError(errors) {\n      return console.log(errors);\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: classes.input,\n    label: t('common:profile-landing.form_name'),\n    onChange: handleChange('name'),\n    name: \"Name\",\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['this field is required']\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: classes.input,\n    label: t('common:profile-landing.form_email'),\n    onChange: handleChange('email'),\n    name: \"Email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid']\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    multiline: true,\n    rows: \"6\",\n    className: classes.input,\n    label: t('common:profile-landing.form_message'),\n    onChange: handleChange('message'),\n    name: \"Message\",\n    value: values.message\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.btnArea\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\"\n  }, t('common:profile-landing.form_send')))))))));\n}\n\nexport default withTranslation(['profile-landing'])(Form);","map":null,"metadata":{},"sourceType":"module"}