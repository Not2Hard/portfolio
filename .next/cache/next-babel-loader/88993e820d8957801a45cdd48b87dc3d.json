{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from \"../../i18n\";\nimport logo from '../../public/images/profile-logo.svg';\nimport brand from \"../../public/text/brand\";\nimport { useText } from \"../../theme/common\";\nimport useStyles from './ux-style';\nimport ContactForm from '../Contact/Form';\nimport awsmap from '../../public/images/profile/ux-images/map.jpg';\nimport tf2 from '../../public/images/profile/ux-images/tafs2.jpg';\nimport users from '../../public/images/profile/tf-images/users.jpg';\nimport tfmock from '../../public/images/profile/tf-images/tapandfork.jpg';\n\nconst AwsOverview = () => {\n  const {\n    0: pageNumber,\n    1: setPageNumber\n  } = useState(1);\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    component: \"footer\"\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"left\"\n  }, \"Project Description:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph\n  }, \"When using amazon web services developers  initiate instances of services in different regions. It is hard to see what is still running and what has stopped. Some of those services could be pricey and they can be on and off by a condition that is hard to keep in track. One can get unexpectedly high bill if forget that something in different region is still running.\", /*#__PURE__*/React.createElement(\"br\", null), \"A simple web application was created to see all accounts in all the regions.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: awsmap,\n    align: \"center\",\n    width: \"90%\",\n    alt: \"AWS accounts map\"\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph\n  }, /*#__PURE__*/React.createElement(\"b\", null, \"My role in this project\"), \" - UX and Graphic design of the application\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\"\n  }, \"User research:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: text.paragraph\n  }, \"This application is for aws developers. I didn't have to create personas for this project. My personal contacts are mostly developers :)\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), \"It seemed logical to use a spreadsheet data presentation. Many developers I know don't like spreadsheets, though.\", /*#__PURE__*/React.createElement(\"br\", null), \"Bubble chart is much more fun and helps to prioritise your actions. I decided to combine bubble chart ideas with cards. \", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), \"Every service in every region will be shown in a separate card. On the front will be information at glance. On click the card is turning and shows details.\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), \"The size of the card shows how many items are running and the title shows what servis it is. From a quick glance a user can see where the biggest bill will come from.\", /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null))));\n};\n\nexport default withTranslation(['profile-landing'])(AwsOverview);","map":null,"metadata":{},"sourceType":"module"}