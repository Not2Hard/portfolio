{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Fragment } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from 'next/link';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Fade from '@material-ui/core/Fade';\nimport { withTranslation } from \"../../i18n\";\nimport logo from \"../../public/images/profile-logo.svg\";\nimport routeLink from \"../../public/text/link\";\nimport \"../../vendors/hamburger-menu.css\";\nimport useStyles from './header-style';\nimport Settings from '../Settings';\nimport navMenu from '../SideNavigation/menu';\nvar counter = 0;\n\nfunction createData(name, url, offset) {\n  counter += 1;\n  return {\n    id: counter,\n    name: name,\n    url: url,\n    offset: offset\n  };\n}\n\nvar LinkBtn = React.forwardRef(function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return /*#__PURE__*/React.createElement(AnchorLink, _extends({\n    to: props.to\n  }, props, {\n    innerRef: ref\n  })); // eslint-disable-line\n});\n\nfunction Header(props) {\n  // Theme breakpoints\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up('md'));\n  var isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  var _useState = useState(false),\n      fixed = _useState[0],\n      setFixed = _useState[1];\n\n  var flagFixed = false;\n\n  var handleScroll = function handleScroll() {\n    var doc = document.documentElement;\n    var scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    var newFlagFixed = scroll > 80;\n\n    if (flagFixed !== newFlagFixed) {\n      setFixed(newFlagFixed);\n      flagFixed = newFlagFixed;\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n  var classes = useStyles();\n  var onToggleDark = props.onToggleDark,\n      onToggleDir = props.onToggleDir,\n      invert = props.invert,\n      t = props.t;\n\n  var _useState2 = useState([createData(navMenu[0], '#' + navMenu[0]), createData(navMenu[1], '#' + navMenu[1], -100), createData(navMenu[2], '#' + navMenu[2]), createData(navMenu[3], '#' + navMenu[3], -40), createData(navMenu[4], '#' + navMenu[4], -40), createData(navMenu[5], '#' + navMenu[5], -40), createData(navMenu[6], '#' + navMenu[6])]),\n      menuList = _useState2[0];\n\n  var _useState3 = useState(false),\n      openDrawer = _useState3[0],\n      setOpenDrawer = _useState3[1];\n\n  var handleOpenDrawer = function handleOpenDrawer() {\n    setOpenDrawer(!openDrawer);\n  };\n\n  var handleCloseDrawer = function handleCloseDrawer() {\n    setOpenDrawer(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    component: \"div\",\n    position: \"relative\",\n    id: \"header\",\n    className: clsx(classes.header, invert || fixed || isMobile ? classes.fixed : '', openDrawer && classes.openDrawer)\n  }, /*#__PURE__*/React.createElement(Container, {\n    fixed: isDesktop\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerContent\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: clsx(classes.navLogo, invert && classes.invert)\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleOpenDrawer,\n    className: clsx('hamburger hamburger--squeeze', classes.mobileMenu, openDrawer && 'is-active')\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hamburger-box\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.bar, 'hamburger-inner')\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logo\n  }, invert ? /*#__PURE__*/React.createElement(Link, {\n    href: routeLink.profile.home\n  }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\"\n  }))) : /*#__PURE__*/React.createElement(AnchorLink, {\n    href: \"#home\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\"\n  }))), /*#__PURE__*/React.createElement(Settings, {\n    toggleDark: onToggleDark,\n    toggleDir: onToggleDir,\n    invert: invert\n  }))))), /*#__PURE__*/React.createElement(Fade, {\n    \"in\": openDrawer\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.paperNav, openDrawer && classes.show)\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mobileNav\n  }, openDrawer && /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.menu\n  }, menuList.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id.toString(),\n      style: {\n        animationDuration: index * 0.15 + 's'\n      }\n    }, invert ?\n    /*#__PURE__*/\n    // eslint-disable-next-line\n    React.createElement(Button, {\n      href: '/' + item.url\n    }, t('common:profile-landing.header_' + item.name)) :\n    /*#__PURE__*/\n    // eslint-disable-next-line\n    React.createElement(Button, {\n      component: AnchorLink,\n      onClick: handleCloseDrawer,\n      offset: item.offset || 0,\n      href: item.url\n    }, t('common:profile-landing.header_' + item.name)));\n  }))))));\n}\n\nHeader.defaultProps = {\n  invert: false\n};\nexport default withTranslation(['profile-landing'])(Header);","map":null,"metadata":{},"sourceType":"module"}