{"ast":null,"code":"var _jsxFileName = \"/Users/natalia/Development/portfolio/components/Contact/Form.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport useStyles from './contact-style';\n\nfunction Form(props) {\n  const classes = useStyles();\n  const text = useText();\n  const {\n    t\n  } = props;\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  });\n  const {\n    0: openNotif,\n    1: setNotif\n  } = useState(false);\n\n  const handleChange = name => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = () => {\n    setNotif(true);\n  };\n\n  const handleClose = () => {\n    setNotif(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    key: \"top right\",\n    open: openNotif,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"message-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }, \"Message Sent\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.formBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: clsx(classes.title, text.title),\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, t('common:profile-landing.contact_title'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 7,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: errors => console.log(errors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: classes.input,\n    label: t('common:profile-landing.form_name'),\n    onChange: handleChange('name'),\n    name: \"Name\",\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: classes.input,\n    label: t('common:profile-landing.form_email'),\n    onChange: handleChange('email'),\n    name: \"Email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    multiline: true,\n    rows: \"6\",\n    className: classes.input,\n    label: t('common:profile-landing.form_message'),\n    onChange: handleChange('message'),\n    name: \"Message\",\n    value: values.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.btnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, t('common:profile-landing.form_send')))))))));\n}\n\nForm.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(Form);","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/components/Contact/Form.js"],"names":["React","useState","PropTypes","clsx","Button","Paper","Grid","Typography","Snackbar","withTranslation","useText","ValidatorForm","TextValidator","useStyles","Form","props","classes","text","t","values","setValues","name","email","phone","company","message","openNotif","setNotif","handleChange","event","target","value","handleSubmit","handleClose","formWrap","vertical","horizontal","formBox","title","form","errors","console","log","input","btnArea","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { withTranslation } from '~/i18n';\nimport { useText } from '~/theme/common';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport useStyles from './contact-style';\n\nfunction Form(props) {\n  const classes = useStyles();\n  const text = useText();\n  const { t } = props;\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: ''\n  });\n\n  const [openNotif, setNotif] = useState(false);\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleSubmit = () => {\n    setNotif(true);\n  };\n\n  const handleClose = () => {\n    setNotif(false);\n  };\n\n  return (\n    <div className={classes.formWrap}>\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        key=\"top right\"\n        open={openNotif}\n        autoHideDuration={4000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">Message Sent</span>}\n      />\n      <Paper className={classes.formBox}>\n        <Grid container spacing={6}>\n          <Grid item lg={5} xs={12}>\n            <Typography className={clsx(classes.title, text.title)} variant=\"h3\">\n              {t('common:profile-landing.contact_title')}\n            </Typography>\n          </Grid>\n          <Grid item lg={7} xs={12}>\n            <div className={classes.form}>\n              <ValidatorForm\n                onSubmit={handleSubmit}\n                onError={errors => console.log(errors)}\n              >\n                <TextValidator\n                  className={classes.input}\n                  label={t('common:profile-landing.form_name')}\n                  onChange={handleChange('name')}\n                  name=\"Name\"\n                  value={values.name}\n                  validators={['required']}\n                  errorMessages={['this field is required']}\n                />\n                <TextValidator\n                  className={classes.input}\n                  label={t('common:profile-landing.form_email')}\n                  onChange={handleChange('email')}\n                  name=\"Email\"\n                  value={values.email}\n                  validators={['required', 'isEmail']}\n                  errorMessages={['this field is required', 'email is not valid']}\n                />\n                <TextValidator\n                  multiline\n                  rows=\"6\"\n                  className={classes.input}\n                  label={t('common:profile-landing.form_message')}\n                  onChange={handleChange('message')}\n                  name=\"Message\"\n                  value={values.message}\n                />\n                <div className={classes.btnArea}>\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\" size=\"large\">\n                    {t('common:profile-landing.form_send')}\n                  </Button>\n                </div>\n              </ValidatorForm>\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['profile-landing'])(Form);\n"]},"metadata":{},"sourceType":"module"}