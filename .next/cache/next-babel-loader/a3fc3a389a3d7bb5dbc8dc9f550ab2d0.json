{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport Carousel from 'react-slick';\nimport clsx from 'clsx';\nimport imgAPI from \"../../public/images/imgAPI\";\nimport { withTranslation } from \"../../i18n\";\nimport ImageThumbCard from '../Cards/ImageThumb';\nimport Title from '../Title';\nimport useStyle from './gallery-style';\nconst portfolio = [{\n  img: imgAPI.profile[4],\n  title: 'Tap & Fork',\n  link: 'http://localhost:3007/en/tapfork',\n  size: 'long',\n  category: 'ux'\n}, {\n  img: imgAPI.profile[3],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'short',\n  category: 'cat2'\n}, {\n  img: imgAPI.profile[5],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'short',\n  category: 'cat3'\n}, {\n  img: imgAPI.profile[6],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'long',\n  category: 'cat1'\n}, {\n  img: imgAPI.profile[8],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'short',\n  category: 'cat2'\n}, {\n  img: imgAPI.profile[7],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'short',\n  category: 'cat3'\n}, {\n  img: imgAPI.profile[3],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'short',\n  category: 'cat1'\n}, {\n  img: imgAPI.profile[5],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'short',\n  category: 'cat2'\n}, {\n  img: imgAPI.profile[4],\n  title: 'Aenean facilisis vitae purus',\n  link: 'linkofthisitem.com',\n  size: 'long',\n  category: 'cat2'\n}];\n\nfunction Gallery(props) {\n  const classes = useStyle();\n  const {\n    t\n  } = props;\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: isLoaded,\n    1: setLoaded\n  } = useState(true);\n  const {\n    0: filter,\n    1: setFilter\n  } = useState('all');\n  useEffect(() => {\n    setData(portfolio);\n  }, []);\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    autoplay: false,\n    slidesToShow: 1,\n    arrows: false\n  };\n\n  const filterChildren = name => {\n    if (name !== 'all') {\n      const filteredData = portfolio.filter(item => item.category === name);\n      setData(filteredData);\n      setFilter(name);\n    } else {\n      setData(portfolio);\n      setFilter('all');\n    }\n\n    setLoaded(false);\n    setTimeout(() => {\n      setLoaded(true);\n    }, 700);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Container, null, __jsx(Title, null, t('common:profile-landing.gallery_title'), __jsx(\"strong\", null, t('common:profile-landing.gallery_titleBold'))), __jsx(\"div\", {\n    className: classes.filter\n  }, __jsx(Button, {\n    onClick: () => filterChildren('all'),\n    className: filter === 'all' ? classes.selected : ''\n  }, \"All\"), __jsx(Button, {\n    onClick: () => filterChildren('cat1'),\n    className: filter === 'cat1' ? classes.selected : ''\n  }, \"Category 1\"), __jsx(Button, {\n    onClick: () => filterChildren('cat2'),\n    className: filter === 'cat2' ? classes.selected : ''\n  }, \"Category 2\"), __jsx(Button, {\n    onClick: () => filterChildren('cat3'),\n    className: filter === 'cat3' ? classes.selected : ''\n  }, \"Category 3\"), __jsx(Button, {\n    onClick: () => filterChildren('cat4'),\n    className: filter === 'cat4' ? classes.selected : ''\n  }, \"Category 4\"), __jsx(Button, {\n    onClick: () => filterChildren('ux'),\n    className: filter === 'ux' ? classes.selected : ''\n  }, \"UX\")), __jsx(Hidden, {\n    xsDown: true\n  }, __jsx(\"div\", {\n    className: classes.massonry\n  }, data.map((item, index) => __jsx(\"div\", {\n    className: clsx(classes.item, isLoaded && classes.loaded),\n    key: index.toString(),\n    style: {\n      transitionDuration: index / 4 + 's'\n    }\n  }, __jsx(ImageThumbCard, {\n    img: item.img,\n    title: item.title,\n    link: item.link,\n    size: item.size\n  })))), data.length < 1 && __jsx(Typography, {\n    variant: \"button\",\n    component: \"p\",\n    align: \"center\"\n  }, t('common:profile-landing.gallery_nodata'))), __jsx(Hidden, {\n    smUp: true\n  }, __jsx(Carousel, settings, data.map((item, index) => __jsx(\"div\", {\n    className: classes.itemCarousel,\n    key: index.toString()\n  }, __jsx(ImageThumbCard, {\n    img: item.img,\n    title: item.title,\n    link: item.link,\n    size: item.size\n  })))))));\n}\n\nexport default withTranslation(['profile-landing'])(Gallery);","map":null,"metadata":{},"sourceType":"module"}