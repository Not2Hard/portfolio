{"ast":null,"code":"var _jsxFileName = \"/Users/natalia/Development/portfolio/components/Testimonials/Testimonials.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactWOW from 'react-wow';\nimport Carousel from 'react-slick';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Popover from '@material-ui/core/Popover';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport testiData from './testimonialsData';\nimport Title from '../Title';\nimport useStyle from './testi-style';\n\nfunction AvatarBuble(props) {\n  const classes = useStyle();\n  const {\n    avatar,\n    name,\n    x,\n    y,\n    openPopover,\n    closePopover\n  } = props;\n  return __jsx(\"div\", {\n    className: classes.person,\n    style: {\n      left: x,\n      top: y\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, avatar ? __jsx(Avatar, {\n    alt: name,\n    src: avatar,\n    className: classes.avatar,\n    onMouseEnter: e => openPopover(e),\n    onMouseLeave: closePopover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }) : __jsx(\"span\", {\n    className: classes.dot,\n    onMouseEnter: e => openPopover(e),\n    onMouseLeave: closePopover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n}\n\nAvatarBuble.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  openPopover: PropTypes.func.isRequired,\n  closePopover: PropTypes.func.isRequired\n};\nAvatarBuble.defaultProps = {\n  avatar: ''\n};\n\nfunction Testimonials(props) {\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: popupData,\n    1: setPopupData\n  } = useState({});\n  const {\n    t\n  } = props;\n  const classes = useStyle();\n  const text = useText();\n  const open = Boolean(anchorEl);\n\n  const firsthChar = txt => txt.charAt(0);\n\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    autoplay: false,\n    slidesToShow: 1,\n    arrows: false\n  };\n\n  function handlePopoverOpen(event, item) {\n    setAnchorEl(event.currentTarget);\n    setPopupData(item);\n  }\n\n  function handlePopoverClose() {\n    setAnchorEl(null);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(Popover, {\n    id: \"mouse-over-popover\",\n    className: classes.popover,\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    onClose: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    display: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, popupData.text), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, popupData.name), __jsx(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, popupData.title))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    dark: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, t('common:profile-landing.testi_title'), \"\\xA0\", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, t('common:profile-landing.testi_titleBold'))), __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 7,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.worldMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, __jsx(Hidden, {\n    xsDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: classes.avatarWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, testiData.map((item, index) => __jsx(AvatarBuble, {\n    key: index.toString(),\n    avatar: item.avatar,\n    name: item.name,\n    x: item.x,\n    y: item.y,\n    openPopover: e => handlePopoverOpen(e, item),\n    closePopover: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  })))), __jsx(Hidden, {\n    smUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, __jsx(Carousel, _extends({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), testiData.map((item, index) => __jsx(\"div\", {\n    className: classes.itemCarousel,\n    key: index.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, __jsx(Paper, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    display: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, item.text), __jsx(\"div\", {\n    className: classes.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, item.avatar ? __jsx(Avatar, {\n    alt: item.name,\n    src: item.avatar,\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }) : __jsx(Avatar, {\n    alt: item.name,\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, firsthChar(item.name)), __jsx(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 27\n    }\n  }, item.name))))))))), __jsx(Grid, {\n    item: true,\n    md: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, __jsx(ReactWOW, {\n    animation: \"fadeInUpShort\",\n    offset: -200,\n    delay: \"0.2s\",\n    duration: \"0.3s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    className: clsx(classes.titleSerif, text.title2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, t('common:profile-landing.testi_title2'))), __jsx(ReactWOW, {\n    animation: \"fadeInUpShort\",\n    offset: -200,\n    delay: \"0.3s\",\n    duration: \"0.3s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"p\",\n    className: text.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, t('common:profile-landing.testi_desc')), __jsx(Button, {\n    color: \"secondary\",\n    href: \"#contact\",\n    size: \"large\",\n    className: classes.button,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, t('common:profile-landing.testi_button')))))))));\n}\n\nTestimonials.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(Testimonials);","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/components/Testimonials/Testimonials.js"],"names":["React","useState","PropTypes","ReactWOW","Carousel","clsx","Paper","Container","Hidden","Grid","Typography","Popover","Avatar","Button","withTranslation","useText","testiData","Title","useStyle","AvatarBuble","props","classes","avatar","name","x","y","openPopover","closePopover","person","left","top","e","dot","propTypes","string","isRequired","number","func","defaultProps","Testimonials","anchorEl","setAnchorEl","popupData","setPopupData","t","text","open","Boolean","firsthChar","txt","charAt","settings","dots","infinite","speed","autoplay","slidesToShow","arrows","handlePopoverOpen","event","item","currentTarget","handlePopoverClose","root","popover","paper","vertical","horizontal","paperBlock","title","worldMap","avatarWrap","map","index","toString","itemCarousel","card","titleSerif","title2","paragraph","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactWOW from 'react-wow';\nimport Carousel from 'react-slick';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Popover from '@material-ui/core/Popover';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { withTranslation } from '~/i18n';\nimport { useText } from '~/theme/common';\nimport testiData from './testimonialsData';\nimport Title from '../Title';\nimport useStyle from './testi-style';\n\nfunction AvatarBuble(props) {\n  const classes = useStyle();\n  const {\n    avatar, name,\n    x, y,\n    openPopover, closePopover\n  } = props;\n  return (\n    <div className={classes.person} style={{ left: x, top: y }}>\n      {avatar ? (\n        <Avatar\n          alt={name}\n          src={avatar}\n          className={classes.avatar}\n          onMouseEnter={(e) => openPopover(e)}\n          onMouseLeave={closePopover}\n        />\n      ) : (\n        <span\n          className={classes.dot}\n          onMouseEnter={(e) => openPopover(e)}\n          onMouseLeave={closePopover}\n        />\n      )}\n    </div>\n  );\n}\n\nAvatarBuble.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  openPopover: PropTypes.func.isRequired,\n  closePopover: PropTypes.func.isRequired\n};\n\nAvatarBuble.defaultProps = {\n  avatar: ''\n};\n\nfunction Testimonials(props) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [popupData, setPopupData] = useState({});\n  const { t } = props;\n  const classes = useStyle();\n  const text = useText();\n  const open = Boolean(anchorEl);\n\n  const firsthChar = txt => txt.charAt(0);\n\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    autoplay: false,\n    slidesToShow: 1,\n    arrows: false\n  };\n\n  function handlePopoverOpen(event, item) {\n    setAnchorEl(event.currentTarget);\n    setPopupData(item);\n  }\n\n  function handlePopoverClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        onClose={handlePopoverClose}\n      >\n        <div className={classes.paperBlock}>\n          <Typography gutterBottom display=\"block\">\n            {popupData.text}\n          </Typography>\n          <Typography variant=\"h6\">\n            {popupData.name}\n          </Typography>\n          <Typography className={classes.title}>\n            {popupData.title}\n          </Typography>\n        </div>\n      </Popover>\n      <Container>\n        <Title dark>\n          {t('common:profile-landing.testi_title')}\n          &nbsp;\n          <strong>\n            {t('common:profile-landing.testi_titleBold')}\n          </strong>\n        </Title>\n        <Grid container>\n          <Grid item md={7} xs={12}>\n            <div className={classes.worldMap}>\n              <Hidden xsDown>\n                <div className={classes.avatarWrap}>\n                  {testiData.map((item, index) => (\n                    <AvatarBuble\n                      key={index.toString()}\n                      avatar={item.avatar}\n                      name={item.name}\n                      x={item.x}\n                      y={item.y}\n                      openPopover={(e) => handlePopoverOpen(e, item)}\n                      closePopover={handlePopoverClose}\n                    />\n                  ))}\n                </div>\n              </Hidden>\n              <Hidden smUp>\n                <Carousel {...settings}>\n                  {testiData.map((item, index) => (\n                    <div\n                      className={classes.itemCarousel}\n                      key={index.toString()}\n                    >\n                      <Paper className={classes.card}>\n                        <Typography variant=\"body1\" display=\"block\">\n                          {item.text}\n                        </Typography>\n                        <div className={classes.name}>\n                          {item.avatar ? (\n                            <Avatar alt={item.name} src={item.avatar} className={classes.avatar} />\n                          ) : (\n                            <Avatar alt={item.name} className={classes.avatar}>\n                              {firsthChar(item.name)}\n                            </Avatar>\n                          )}\n                          <Typography variant=\"caption\">\n                            {item.name}\n                          </Typography>\n                        </div>\n                      </Paper>\n                    </div>\n                  ))}\n                </Carousel>\n              </Hidden>\n            </div>\n          </Grid>\n          <Grid item md={5} xs={12}>\n            <div className={classes.text}>\n              <ReactWOW animation=\"fadeInUpShort\" offset={-200} delay=\"0.2s\" duration=\"0.3s\">\n                <Typography\n                  variant=\"h3\"\n                  className={clsx(classes.titleSerif, text.title2)}\n                >\n                  {t('common:profile-landing.testi_title2')}\n                </Typography>\n              </ReactWOW>\n              <ReactWOW animation=\"fadeInUpShort\" offset={-200} delay=\"0.3s\" duration=\"0.3s\">\n                <div>\n                  <Typography component=\"p\" className={text.paragraph}>\n                    {t('common:profile-landing.testi_desc')}\n                  </Typography>\n                  <Button color=\"secondary\" href=\"#contact\" size=\"large\" className={classes.button} variant=\"contained\">\n                    {t('common:profile-landing.testi_button')}\n                  </Button>\n                </div>\n              </ReactWOW>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nTestimonials.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['profile-landing'])(Testimonials);\n"]},"metadata":{},"sourceType":"module"}