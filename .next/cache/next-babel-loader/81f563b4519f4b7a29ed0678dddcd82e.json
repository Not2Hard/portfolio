{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport ReactWOW from 'react-wow';\nimport Carousel from 'react-slick';\nimport clsx from 'clsx';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Popover from '@material-ui/core/Popover';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { withTranslation } from \"../../i18n\";\nimport { useText } from \"../../theme/common\";\nimport testiData from './testimonialsData';\nimport Title from '../Title';\nimport useStyle from './testi-style';\n\nfunction AvatarBuble(props) {\n  const classes = useStyle();\n  const {\n    avatar,\n    name,\n    x,\n    y,\n    openPopover,\n    closePopover\n  } = props;\n  return __jsx(\"div\", {\n    className: classes.person,\n    style: {\n      left: x,\n      top: y\n    }\n  }, avatar ? __jsx(Avatar, {\n    alt: name,\n    src: avatar,\n    className: classes.avatar,\n    onMouseEnter: e => openPopover(e),\n    onMouseLeave: closePopover\n  }) : __jsx(\"span\", {\n    className: classes.dot,\n    onMouseEnter: e => openPopover(e),\n    onMouseLeave: closePopover\n  }));\n}\n\nAvatarBuble.defaultProps = {\n  avatar: ''\n};\n\nfunction Testimonials(props) {\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: popupData,\n    1: setPopupData\n  } = useState({});\n  const {\n    t\n  } = props;\n  const classes = useStyle();\n  const text = useText();\n  const open = Boolean(anchorEl);\n\n  const firsthChar = txt => txt.charAt(0);\n\n  const settings = {\n    dots: false,\n    infinite: false,\n    speed: 500,\n    autoplay: false,\n    slidesToShow: 1,\n    arrows: false\n  };\n\n  function handlePopoverOpen(event, item) {\n    setAnchorEl(event.currentTarget);\n    setPopupData(item);\n  }\n\n  function handlePopoverClose() {\n    setAnchorEl(null);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Popover, {\n    id: \"mouse-over-popover\",\n    className: classes.popover,\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    onClose: handlePopoverClose\n  }, __jsx(\"div\", {\n    className: classes.paperBlock\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    display: \"block\"\n  }, popupData.text), __jsx(Typography, {\n    variant: \"h6\"\n  }, popupData.name), __jsx(Typography, {\n    className: classes.title\n  }, popupData.title))), __jsx(Container, null, __jsx(Title, {\n    dark: true\n  }, t('common:profile-landing.testi_title'), \"\\xA0\", __jsx(\"strong\", null, t('common:profile-landing.testi_titleBold'))), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 7,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.worldMap\n  }, __jsx(Hidden, {\n    xsDown: true\n  }, __jsx(\"div\", {\n    className: classes.avatarWrap\n  }, testiData.map((item, index) => __jsx(AvatarBuble, {\n    key: index.toString(),\n    avatar: item.avatar,\n    name: item.name,\n    x: item.x,\n    y: item.y,\n    openPopover: e => handlePopoverOpen(e, item),\n    closePopover: handlePopoverClose\n  })))), __jsx(Hidden, {\n    smUp: true\n  }, __jsx(Carousel, settings, testiData.map((item, index) => __jsx(\"div\", {\n    className: classes.itemCarousel,\n    key: index.toString()\n  }, __jsx(Paper, {\n    className: classes.card\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    display: \"block\"\n  }, item.text), __jsx(\"div\", {\n    className: classes.name\n  }, item.avatar ? __jsx(Avatar, {\n    alt: item.name,\n    src: item.avatar,\n    className: classes.avatar\n  }) : __jsx(Avatar, {\n    alt: item.name,\n    className: classes.avatar\n  }, firsthChar(item.name)), __jsx(Typography, {\n    variant: \"caption\"\n  }, item.name))))))))), __jsx(Grid, {\n    item: true,\n    md: 5,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.text\n  }, __jsx(ReactWOW, {\n    animation: \"fadeInUpShort\",\n    offset: -200,\n    delay: \"0.2s\",\n    duration: \"0.3s\"\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    className: clsx(classes.titleSerif, text.title2)\n  }, t('common:profile-landing.testi_title2'))), __jsx(ReactWOW, {\n    animation: \"fadeInUpShort\",\n    offset: -200,\n    delay: \"0.3s\",\n    duration: \"0.3s\"\n  }, __jsx(\"div\", null, __jsx(Typography, {\n    component: \"p\",\n    className: text.paragraph\n  }, t('common:profile-landing.testi_desc')), __jsx(Button, {\n    color: \"secondary\",\n    href: \"#contact\",\n    size: \"large\",\n    className: classes.button,\n    variant: \"contained\"\n  }, t('common:profile-landing.testi_button')))))))));\n}\n\nexport default withTranslation(['profile-landing'])(Testimonials);","map":null,"metadata":{},"sourceType":"module"}