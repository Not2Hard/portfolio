{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/natalia/Development/portfolio/components/T&F/Tf.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport Modal from '@material-ui/core/Modal';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from \"../../i18n\";\nimport logo from '../../public/images/profile-logo.svg';\nimport brand from \"../../public/text/brand\";\nimport { useText } from \"../../theme/common\";\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\nimport tf1 from '../../public/images/profile/tf-images/tafs1.jpg';\nimport tf2 from '../../public/images/profile/tf-images/tafs2.jpg';\nimport tf3 from '../../public/images/profile/tf-images/tafs3.jpg';\nimport users from '../../public/images/profile/tf-images/users.jpg';\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\n\nvar TapFork = function TapFork() {\n  _s();\n\n  var _useState = useState(1),\n      pageNumber = _useState[0],\n      setPageNumber = _useState[1];\n\n  var classes = useStyles();\n  var text = useText();\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    component: \"footer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    direction: isMobile ? 'column' : 'row',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Problem:\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Solution:\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, \"Tap & Fork is an application that allows people to find restaurants. Conceptually it is similar to applications like Yelp, OpenTable or Zomato. Mobile app should have simular functionality.\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, \"Tap & Fork is built to help restaurant owners to gain controll over thier representation in the app. Restaurant owners can easily upload images, create coupons, and run promotions.\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), \"Tap & Fork has a website where restaurant owners could build promotions that would be run for specified time intervals, add coupons, and create custom images with a simple and easy-to-use web based graphic editor.\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: tf1,\n    className: classes.mobshots,\n    alt: \"tap and fork\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: tf2,\n    className: classes.mobshots,\n    alt: \"tap and fork\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"My role in this project\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"UX designe for online ad maker\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Graphic support for the project\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  })), __jsx(Typography, {\n    variant: \"h5\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"I made competitor research. It gave us user expectations and ideas on improvements. Next step was user research. A teem member contacted 20 restaurant owners. After that we could state goals and pain points for both restaurant customers and restaurant owners. I could create user personas and coordinate ui with different scenarios of app users.\"), __jsx(\"img\", {\n    src: users,\n    alt: \"tap and fork\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"As a result we decided on this functionality list:\", __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Search for distance, cuisine type, and keywords\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Listing of graphic ads\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Call and direction buttons\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Gallery for each restaurant\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Star rating\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Favorites \"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Sample placeholders and Google images for non-subscribed restaurants\")), __jsx(\"a\", {\n    href: \"file-loader!../../public/images/profile/tf-images/tfsi.pdf\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, \"open pdf\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  })), __jsx(Document, {\n    file: \"../../public/images/profile/tf-images/tfsi.pdf\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, __jsx(Page, {\n    pageNumber: pageNumber,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  })), __jsx(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"rrrr\")))));\n};\n\n_s(TapFork, \"o7gPsEyG7PYe2r5whaPOAjCklzQ=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = TapFork;\nTapFork.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(TapFork);\n\nvar _c;\n\n$RefreshReg$(_c, \"TapFork\");","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/components/T&F/Tf.js"],"names":["React","useState","PropTypes","Container","Modal","useMediaQuery","useTheme","Grid","Typography","Divider","withTranslation","logo","brand","useText","useStyles","ContactForm","tf1","tf2","tf3","users","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","version","TapFork","pageNumber","setPageNumber","classes","text","theme","isMobile","breakpoints","down","root","paragraph","mobshots","open","handleClose","propTypes","t","func","isRequired"],"mappings":"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","sourcesContent":["\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport Modal from '@material-ui/core/Modal';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from '~/i18n';\nimport logo from '../../public/images/profile-logo.svg';\nimport brand from '~/public/text/brand';\nimport { useText } from '~/theme/common';\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\nimport tf1 from '../../public/images/profile/tf-images/tafs1.jpg';\nimport tf2 from '../../public/images/profile/tf-images/tafs2.jpg';\nimport tf3 from '../../public/images/profile/tf-images/tafs3.jpg';\nimport users from '../../public/images/profile/tf-images/users.jpg';\nimport { Document, Page, pdfjs } from 'react-pdf';\n\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst TapFork = () => {\n  const [pageNumber, setPageNumber] = useState(1);\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n      <div className={classes.root}>\n        <Container maxWidth=\"lg\" component=\"footer\">\n          <Grid container spacing={6} direction={isMobile ? 'column' : 'row'}>\n            <Grid item xs={12} md={5}>\n                <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                  Problem:\n                </Typography>\n                <Typography className={text.paragraph}>\n                  Shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns.\n                </Typography>\n                \n            </Grid>\n            <Grid item xs={12} md={7}>\n              <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                  Solution:\n                  </Typography>\n                  <Typography className={text.paragraph}>\n                    Tap & Fork is an application that allows people to find restaurants. Conceptually it is similar to applications like Yelp, OpenTable or Zomato. Mobile app should have simular functionality. \n                  </Typography>\n                  <Typography className={text.paragraph}>\n                    Tap & Fork is built to help restaurant owners to gain controll over thier representation in the app. Restaurant owners can easily upload images, create coupons, and run promotions.\n                    <br />\n                    Tap & Fork has a website where restaurant owners could build promotions that would be run for specified time intervals, add coupons, and create custom images with a simple and easy-to-use web based graphic editor.\n                    <br />\n                    <img src={tf1} className={classes.mobshots} alt=\"tap and fork\" />\n                    <img src={tf2} className={classes.mobshots} alt=\"tap and fork\" />\n                </Typography>\n          \n            </Grid>\n           \n            <Grid item xs={12} md={5}>\n            <Typography variant=\"h4\" align=\"left\">\n                  My role in this project\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={7}>\n            <Typography className={text.paragraph}>\n                  <ul>\n                    <li>UX and Graphic design of the application</li>\n                    <li>UX designe for online ad maker</li>\n                    <li>Graphic support for the project</li>\n                  </ul>\n                  <br />\n                </Typography>\n                <Typography variant=\"h5\" align=\"left\">\n                  UX and Graphic design of the application\n                </Typography>\n                <Typography className={text.paragraph}>\n                  I made competitor research. It gave us user expectations and ideas on improvements.\n                  Next step was user research. A teem member contacted 20 restaurant owners. After that we could state goals and pain points for both restaurant customers and restaurant owners. I could create user personas and coordinate ui with different scenarios of app users.\n                </Typography>\n                <img src={users} alt=\"tap and fork\" />\n                <Typography className={text.paragraph}>\n                  As a result we decided on this functionality list:\n                  <ul>\n                    <li>Search for distance, cuisine type, and keywords</li>\n                    <li>Listing of graphic ads</li>\n                    <li>Call and direction buttons</li>\n                    <li>Gallery for each restaurant</li>\n                    <li>Star rating</li>\n                    <li>Favorites </li>\n                    <li>Sample placeholders and Google images for non-subscribed restaurants</li>\n                  </ul>\n                  <a href=\"file-loader!../../public/images/profile/tf-images/tfsi.pdf\" target=\"_blank\">open pdf</a>\n                  \n                 \n                  <br />\n                </Typography>\n                {/* <div onClick={ () => window.open(require('../../public/images/profile/tf-images/tfsi.pdf'), '_none')}>open pdf</div> */}\n                <Document file=\"../../public/images/profile/tf-images/tfsi.pdf\" >\n                  <Page pageNumber={pageNumber} />\n                </Document>\n                <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        rrrr\n      </Modal>\n\n\n               \n\n          \n            </Grid>\n               \n\n                \n              \n                </Grid>   \n        </Container>      \n    </div>\n    );\n  }\n\n  TapFork.propTypes = {\n    t: PropTypes.func.isRequired\n  };\n  \n  export default withTranslation(['profile-landing'])(TapFork);"]},"metadata":{},"sourceType":"module"}