{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/natalia/Development/portfolio/components/T&F/Tf.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from \"../../i18n\";\nimport logo from \"../../public/images/profile-logo.svg\";\nimport brand from \"../../public/text/brand\";\nimport { useText } from \"../../theme/common\";\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\n\nvar TapFork = function TapFork() {\n  _s();\n\n  var classes = useStyles();\n  var text = useText();\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    component: \"footer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    direction: isMobile ? 'column' : 'row',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Problem:\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns.[put image here]\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Solution:\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"Tap & Fork is an application that allows people to find restaurants. Conceptually it is similar to applications like Yelp, OpenTable or Zomato, Tap & Fork is built to help restaurant owners to gain controll over thier representation in the app. With Tap & Fork, restaurant owners can easily upload images, create coupons, and run promotions.\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"My role in this project\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"UX designe for online ad maker\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Graphic support for the project\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  })), __jsx(Typography, {\n    variant: \"h5\",\n    align: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(Typography, {\n    className: text.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"UX and Graphic design of the application\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"UX designe for online ad maker\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Graphic support for the project\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }))))));\n};\n\n_s(TapFork, \"HGGK1XkTQqN+uOiVUy4SAExgkfY=\", false, function () {\n  return [useStyles, useText, useTheme, useMediaQuery];\n});\n\n_c = TapFork;\nTapFork.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(TapFork);\n\nvar _c;\n\n$RefreshReg$(_c, \"TapFork\");","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/components/T&F/Tf.js"],"names":["React","PropTypes","Container","useMediaQuery","useTheme","Grid","Typography","Divider","withTranslation","logo","brand","useText","useStyles","ContactForm","TapFork","classes","text","theme","isMobile","breakpoints","down","root","paragraph","propTypes","t","func","isRequired"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from '~/i18n';\nimport logo from '~/public/images/profile-logo.svg';\nimport brand from '~/public/text/brand';\nimport { useText } from '~/theme/common';\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\n\nconst TapFork = () => {\n  const classes = useStyles();\n  const text = useText();\n  \n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n      <div className={classes.root}>\n        <Container maxWidth=\"lg\" component=\"footer\">\n          <Grid container spacing={6} direction={isMobile ? 'column' : 'row'}>\n            <Grid item xs={12} md={5}>\n                <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                  Problem:\n                </Typography>\n                <Typography className={text.paragraph}>\n                  Shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns.[put image here]\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <Typography variant=\"h6\" align=\"left\" color=\"primary\">\n                  Solution:\n                  </Typography>\n                  <Typography className={text.paragraph}>\n\n                  Tap & Fork is an application that allows people to find restaurants. Conceptually it is similar to applications like Yelp, OpenTable or Zomato, Tap & Fork is built to help restaurant owners to gain controll over thier representation in the app. With Tap & Fork, restaurant owners can easily upload images, create coupons, and run promotions.\n                    <br />\n                </Typography>\n          \n            </Grid>\n            <Grid item xs={12} md={5}>\n            <Typography variant=\"h4\" align=\"left\">\n                  My role in this project\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={7}>\n            <Typography className={text.paragraph}>\n                  <ul>\n                    <li>UX and Graphic design of the application</li>\n                    <li>UX designe for online ad maker</li>\n                    <li>Graphic support for the project</li>\n                  </ul>\n                  <br />\n                </Typography>\n                <Typography variant=\"h5\" align=\"left\">\n                  UX and Graphic design of the application\n                </Typography>\n                <Typography className={text.paragraph}>\n                  <ul>\n                    <li>UX and Graphic design of the application</li>\n                    <li>UX designe for online ad maker</li>\n                    <li>Graphic support for the project</li>\n                  </ul>\n                  <br />\n                </Typography>\n          \n            </Grid>\n               \n\n                \n              \n                </Grid>   \n        </Container>      \n    </div>\n    );\n  }\n\n  TapFork.propTypes = {\n    t: PropTypes.func.isRequired\n  };\n  \n  export default withTranslation(['profile-landing'])(TapFork);"]},"metadata":{},"sourceType":"module"}