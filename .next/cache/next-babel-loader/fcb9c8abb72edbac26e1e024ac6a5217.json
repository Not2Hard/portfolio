{"ast":null,"code":"var _jsxFileName = \"/Users/natalia/Development/portfolio/components/SideNavigation/SideNavigation.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Container from '@material-ui/core/Container';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\nimport logo from \"../../public/images/profile-logo.svg\";\nimport { withTranslation } from \"../../i18n\";\nimport useStyles from './sidenav-style';\nimport navMenu from './menu';\nimport \"../../vendors/hamburger-menu.css\";\nlet counter = 0;\n\nfunction createData(name, url, offset) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    url,\n    offset\n  };\n}\n\nfunction SideNavigation(props) {\n  const classes = useStyles();\n  const {\n    t\n  } = props;\n  const {\n    0: menuList\n  } = useState([createData(navMenu[0], '#' + navMenu[0], 160), createData(navMenu[1], '#' + navMenu[1]), createData(navMenu[2], '#' + navMenu[2]), createData(navMenu[3], '#' + navMenu[3], -40), createData(navMenu[4], '#' + navMenu[4]), createData(navMenu[5], '#' + navMenu[5]), createData(navMenu[6], '#' + navMenu[6])]);\n  return __jsx(\"div\", {\n    className: classes.navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    fixed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"nav\", {\n    className: classes.navMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(AnchorLink, {\n    href: \"#home\",\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), __jsx(List, {\n    component: \"nav\",\n    className: classes.menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, menuList.map(item => __jsx(ListItem, {\n    key: item.id.toString(),\n    button: true,\n    component: AnchorLink,\n    offset: item.offset || 0,\n    href: item.url,\n    classes: {\n      root: classes.link\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(ListItemText, {\n    classes: {\n      root: classes.text\n    },\n    primary: t('common:profile-landing.header_' + item.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }))))))));\n}\n\nSideNavigation.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['profile-landing'])(SideNavigation);","map":{"version":3,"sources":["/Users/natalia/Development/portfolio/components/SideNavigation/SideNavigation.js"],"names":["React","useState","PropTypes","List","ListItem","ListItemText","Container","AnchorLink","Scrollspy","logo","withTranslation","useStyles","navMenu","counter","createData","name","url","offset","id","SideNavigation","props","classes","t","menuList","navigation","menu","map","item","toString","root","link","text","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,OAAO,kCAAP;AAEA,IAAIC,OAAO,GAAG,CAAd;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,MAA/B,EAAuC;AACrCJ,EAAAA,OAAO,IAAI,CAAX;AACA,SAAO;AACLK,IAAAA,EAAE,EAAEL,OADC;AAELE,IAAAA,IAFK;AAGLC,IAAAA,GAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;AAED,SAASE,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAQF,KAAd;AACA,QAAM;AAAA,OAACG;AAAD,MAAatB,QAAQ,CAAC,CAC1Ba,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,EAAa,MAAMA,OAAO,CAAC,CAAD,CAA1B,EAA+B,GAA/B,CADgB,EAE1BE,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,EAAa,MAAMA,OAAO,CAAC,CAAD,CAA1B,CAFgB,EAG1BE,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,EAAa,MAAMA,OAAO,CAAC,CAAD,CAA1B,CAHgB,EAI1BE,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,EAAa,MAAMA,OAAO,CAAC,CAAD,CAA1B,EAA+B,CAAC,EAAhC,CAJgB,EAK1BE,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,EAAa,MAAMA,OAAO,CAAC,CAAD,CAA1B,CALgB,EAM1BE,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,EAAa,MAAMA,OAAO,CAAC,CAAD,CAA1B,CANgB,EAO1BE,UAAU,CAACF,OAAO,CAAC,CAAD,CAAR,EAAa,MAAMA,OAAO,CAAC,CAAD,CAA1B,CAPgB,CAAD,CAA3B;AASA,SACE;AAAK,IAAA,SAAS,EAAES,OAAO,CAACG,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACT,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAES,OAAO,CAACZ,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,SAAS,EAAEY,OAAO,CAACI,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEb,OADT;AAEE,IAAA,gBAAgB,EAAC,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGW,QAAQ,CAACG,GAAT,CAAaC,IAAI,IAChB,MAAC,QAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACT,EAAL,CAAQU,QAAR,EADP;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,SAAS,EAAErB,UAHb;AAIE,IAAA,MAAM,EAAEoB,IAAI,CAACV,MAAL,IAAe,CAJzB;AAKE,IAAA,IAAI,EAAEU,IAAI,CAACX,GALb;AAME,IAAA,OAAO,EAAE;AAAEa,MAAAA,IAAI,EAAER,OAAO,CAACS;AAAhB,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,YAAD;AACE,IAAA,OAAO,EAAE;AAAED,MAAAA,IAAI,EAAER,OAAO,CAACU;AAAhB,KADX;AAEE,IAAA,OAAO,EAAET,CAAC,CAAC,mCAAmCK,IAAI,CAACZ,IAAzC,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADD,CAJH,CADF,CAJF,CADF,CADF,CADF;AAiCD;;AAEDI,cAAc,CAACa,SAAf,GAA2B;AACzBV,EAAAA,CAAC,EAAEpB,SAAS,CAAC+B,IAAV,CAAeC;AADO,CAA3B;AAIA,eAAexB,eAAe,CAAC,CAAC,iBAAD,CAAD,CAAf,CAAqCS,cAArC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Container from '@material-ui/core/Container';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\nimport logo from '~/public/images/profile-logo.svg';\nimport { withTranslation } from '~/i18n';\nimport useStyles from './sidenav-style';\nimport navMenu from './menu';\nimport '~/vendors/hamburger-menu.css';\n\nlet counter = 0;\nfunction createData(name, url, offset) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    url,\n    offset,\n  };\n}\n\nfunction SideNavigation(props) {\n  const classes = useStyles();\n  const { t } = props;\n  const [menuList] = useState([\n    createData(navMenu[0], '#' + navMenu[0], 160),\n    createData(navMenu[1], '#' + navMenu[1]),\n    createData(navMenu[2], '#' + navMenu[2]),\n    createData(navMenu[3], '#' + navMenu[3], -40),\n    createData(navMenu[4], '#' + navMenu[4]),\n    createData(navMenu[5], '#' + navMenu[5]),\n    createData(navMenu[6], '#' + navMenu[6]),\n  ]);\n  return (\n    <div className={classes.navigation}>\n      <Container fixed>\n        <nav className={classes.navMenu}>\n          <AnchorLink href=\"#home\" className={classes.logo}>\n            <img src={logo} alt=\"logo\" />\n          </AnchorLink>\n          <List component=\"nav\" className={classes.menu}>\n            <Scrollspy\n              items={navMenu}\n              currentClassName=\"active\"\n            >\n              {menuList.map(item => (\n                <ListItem\n                  key={item.id.toString()}\n                  button\n                  component={AnchorLink}\n                  offset={item.offset || 0}\n                  href={item.url}\n                  classes={{ root: classes.link }}\n                >\n                  <ListItemText\n                    classes={{ root: classes.text }}\n                    primary={t('common:profile-landing.header_' + item.name)}\n                  />\n                </ListItem>\n              ))}\n            </Scrollspy>\n          </List>\n        </nav>\n      </Container>\n    </div>\n  );\n}\n\nSideNavigation.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['profile-landing'])(SideNavigation);\n"]},"metadata":{},"sourceType":"module"}