{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withTranslation } from \"../../i18n\";\nimport logo from '../../public/images/profile-logo.svg';\nimport brand from \"../../public/text/brand\";\nimport { useText } from \"../../theme/common\";\nimport useStyles from './tf-style';\nimport ContactForm from '../Contact/Form';\nimport tf1 from '../../public/images/profile/tf-images/tafs1.jpg';\nimport tf2 from '../../public/images/profile/tf-images/tafs2.jpg';\nimport tf3 from '../../public/images/profile/tf-images/tafs3.jpg';\nimport users from '../../public/images/profile/tf-images/users.jpg';\nimport { Document, Page, pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst TapFork = () => {\n  const {\n    0: pageNumber,\n    1: setPageNumber\n  } = useState(1);\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    component: \"footer\"\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6,\n    direction: isMobile ? 'column' : 'row'\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\"\n  }, \"Problem:\"), __jsx(Typography, {\n    className: text.paragraph\n  }, \"Shortcomings of the existing applications to make the pricing strategy more attractive to restaurant owners and to allow them to fully control their marketing campaigns.\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 7\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"left\",\n    color: \"primary\"\n  }, \"Solution:\"), __jsx(Typography, {\n    className: text.paragraph\n  }, \"Tap & Fork is an application that allows people to find restaurants. Conceptually it is similar to applications like Yelp, OpenTable or Zomato. Mobile app should have simular functionality.\"), __jsx(Typography, {\n    className: text.paragraph\n  }, \"Tap & Fork is built to help restaurant owners to gain controll over thier representation in the app. Restaurant owners can easily upload images, create coupons, and run promotions.\", __jsx(\"br\", null), \"Tap & Fork has a website where restaurant owners could build promotions that would be run for specified time intervals, add coupons, and create custom images with a simple and easy-to-use web based graphic editor.\", __jsx(\"br\", null), __jsx(\"img\", {\n    src: tf1,\n    className: classes.mobshots,\n    alt: \"tap and fork\"\n  }), __jsx(\"img\", {\n    src: tf2,\n    className: classes.mobshots,\n    alt: \"tap and fork\"\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 5\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    align: \"left\"\n  }, \"My role in this project\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 7\n  }, __jsx(Typography, {\n    className: text.paragraph\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \"UX and Graphic design of the application\"), __jsx(\"li\", null, \"UX designe for online ad maker\"), __jsx(\"li\", null, \"Graphic support for the project\")), __jsx(\"br\", null)), __jsx(Typography, {\n    variant: \"h5\",\n    align: \"left\"\n  }, \"UX and Graphic design of the application\"), __jsx(Typography, {\n    className: text.paragraph\n  }, \"I made competitor research. It gave us user expectations and ideas on improvements. Next step was user research. A teem member contacted 20 restaurant owners. After that we could state goals and pain points for both restaurant customers and restaurant owners. I could create user personas and coordinate ui with different scenarios of app users.\"), __jsx(\"img\", {\n    src: users,\n    alt: \"tap and fork\"\n  }), __jsx(Typography, {\n    className: text.paragraph\n  }, \"As a result we decided on this functionality list:\", __jsx(\"ul\", null, __jsx(\"li\", null, \"Search for distance, cuisine type, and keywords\"), __jsx(\"li\", null, \"Listing of graphic ads\"), __jsx(\"li\", null, \"Call and direction buttons\"), __jsx(\"li\", null, \"Gallery for each restaurant\"), __jsx(\"li\", null, \"Star rating\"), __jsx(\"li\", null, \"Favorites \"), __jsx(\"li\", null, \"Sample placeholders and Google images for non-subscribed restaurants\")), __jsx(\"a\", {\n    href: \"file-loader!../../public/images/profile/tf-images/tfsi.pdf\",\n    target: \"_blank\"\n  }, \"open pdf\"), __jsx(\"br\", null)), __jsx(Document, {\n    file: \"../../public/images/profile/tf-images/tfsi.pdf\"\n  }, __jsx(Page, {\n    pageNumber: pageNumber\n  }))))));\n};\n\nexport default withTranslation(['profile-landing'])(TapFork);","map":null,"metadata":{},"sourceType":"module"}